---
title: "RFP-ANP"
format: html
---

```{r include=FALSE}
#runtime: shiny
knitr::opts_chunk$set(echo = FALSE)
rm(list = ls())
source("libs.r")
```

```{r include=FALSE, echo=FALSE}
#db anp in localhost
library(RMySQL)  # O RMariaDB

con <- dbConnect(
  RMySQL::MySQL(),
  dbname = "monitoreo",
  host = "localhost",  
  username = "root",
  password = ""
)

df_anp <- dbGetQuery(con, "SELECT * FROM anp")


anp_df = read_excel("C:/Users/israel.monjaraz/OneDrive - Food and Agriculture Organization/Documentos/ProjectCodes/data_anp/anp_tb.xlsx")

```

 
```{r include=FALSE, echo=FALSE}
#get id for each anp:::: dont run
#df_anp_surveyed <- read_excel("data/raw_data/tb_anpencuestadas.xlsx")
#merged_df <- left_join(df_anp_surveyed, df_anp %>% select(nombre_anp = nombre, id_anp), by = "nombre_anp")
#writexl::write_xlsx(merged_df, "data/raw_data/anp_surveyedID03.xlsx")

df_base_rfp = read_excel("data/raw_data/anp_surveyedID03.xlsx")

ANP_frp <- "data/raw_data/RFP_ANP_BD1.xlsx"


namesheets <- excel_sheets(ANP_frp)

#namesheets <- namesheets[-length(namesheets)]
# df_namesheets
for (name in namesheets) {
    assign(paste0("df_", name), read_excel(ANP_frp, sheet = name))
}

names_df <- paste0("df_", namesheets)
```

```{r include=FALSE,echo=FALSE}
# cambiar nombre de las columnas
for (name in names_df) {
  df <- get(name)
  suffix <- gsub(" ", "_", sub("df_", "", name))
  colnames(df) <- c("cat_manejo", "nombre_anp", suffix)
  assign(name, df)
}
```

```{r include=FALSE, echo=FALSE}
#pegar id en cada df
for (name in names_df) {
df <- get(name)
df <- df %>%
  left_join(df_base_rfp %>% select(nombre_anp, id_anp), by = "nombre_anp")
assign(name, df)
}
```

```{r include=FALSE, echo=FALSE}
# rename name_df, i use _, without spaces in the names

namesup_df <- gsub(" ", "_", names_df)
for (i in seq_along(names_df)) {
  assign(namesup_df[i], get(names_df[i]))
  #rm(list = names_df[i])    
}

#add colname for anp with more info in her rfp
colnames(df_Plagas_forestales)[4] <- "nombre_plagas"
colnames(`df_Especies_exóticas-invasoras`)[4] <- "nombre_sp_invasoras"
colnames(df_Cambio_uso_de_suelo)[4] <- "motivos"

```

```{r echo=FALSE}
#me sirve para ver todos los tablas 
# for (df_name in namesup_df) {
#   View(get(df_name), title = df_name)
# }
```

# Análisis exploratorio de los datos (Estadística descriptiva)

```{r include=FALSE, echo=FALSE}
#i create final matrix of my datasets
final_df <- df_base_rfp %>%
  select(id_anp, nombre_anp)

for (df_name in namesup_df) {
  current_df <- get(df_name)
  # we use "valor" for iteratives on all df
  problem_name <- colnames(current_df)[3]   
  colnames(current_df)[3] <- "valor"
  
  # join with id matrix final with all df
  final_df <- final_df %>%
    left_join(current_df %>%
                select(id_anp, valor), 
              by = "id_anp") %>%
    rename(!!problem_name := valor)  # rename of rfp
}

quitar_acentos <- function(colnames_df) {
  iconv(colnames_df, from = "UTF-8", to = "ASCII//TRANSLIT")
}


colnames(final_df) <- quitar_acentos(colnames(final_df))

risk_data <- final_df %>%
  select(-last_col()) %>%        
  filter(id_anp != "10000000") 
```

```{r include=FALSE, echo=FALSE}
#get total risks 
risk_data <- final_df %>%
  select(-last_col())

# sum per rows
final_df <- final_df %>%
  mutate(total_risks_ANP = rowSums(!is.na(risk_data), na.rm = TRUE))

#sum per cols
tot_anp_risk <- colSums(!is.na(final_df[, -c(1, 2, 39)]))


# head(tot_anp_risk)
# 
# print(final_df[1:5,c(1,2,40)])
```

```{r include=FALSE, echo=FALSE}
final_df_ordered <- final_df %>%
  arrange(desc(total_risks_ANP))

hchart <- hchart(final_df_ordered, "bar", hcaes(x = nombre_anp, y = total_risks_ANP)) %>%
  hc_title(text = "Total de Riesgos por ANP") %>%
  hc_xAxis(title = list(text = "Nombre de ANP"), categories = final_df_ordered$nombre_anp) %>%
  hc_yAxis(title = list(text = "Total de Riesgos")) %>%
  hc_tooltip(pointFormat = "ANP: {point.nombre_anp}<br>Total Riesgos: {total_risks_ANP}") %>%
  hc_plotOptions(bar = list(dataLabels = list(enabled = TRUE))) %>%
  hc_add_theme(hc_theme_smpl())
```

```{r include=FALSE, echo=FALSE}
tot_anp_risk <- sort(tot_anp_risk, decreasing = TRUE)

hchart <- hchart(data.frame(risk = names(tot_anp_risk), total_anp = tot_anp_risk), "bar", hcaes(x = risk, y = total_anp)) %>%
  hc_title(text = "Total de ANPs con Problemas por Tipo de Riesgo") %>%
  hc_xAxis(title = list(text = "Tipo de Riesgo"), categories = names(tot_anp_risk), labels = list(rotation = 45)) %>%
  hc_yAxis(title = list(text = "Total de ANPs")) %>%
  hc_tooltip(pointFormat = "Total de ANPs afectadas: {point.y}") %>%
  hc_plotOptions(bar = list(dataLabels = list(enabled = TRUE))) %>%
  hc_colors("lightblue")

```

```{r include=FALSE, echo=FALSE}
hchart <- hchart(data.frame(risk = names(tot_anp_risk), total_anp = tot_anp_risk), "column", hcaes(x = risk, y = total_anp)) %>%
  hc_title(text = "ANP Afectadas por Tipo de Riesgo") %>%
  hc_xAxis(title = list(text = "Tipo de Riesgo"), labels = list(rotation = 45)) %>%
  hc_yAxis(title = list(text = "Total de ANPs")) %>%
  hc_tooltip(pointFormat = "Riesgo: {point.x} <br>Total de ANPs Afectadas: {point.y}") %>%
  hc_plotOptions(column = list(dataLabels = list(enabled = TRUE))) %>%
  hc_colors("#d62728")

```

```{r include=FALSE, echo=FALSE}

annual_report_data <- risk_data %>%
  select(-c(id_anp, nombre_anp)) %>%
  summarise(across(everything(), ~ sum(. == "Todo el año", na.rm = TRUE)))

# Convertir a formato largo
annual_report_data <- annual_report_data %>%
  pivot_longer(everything(), names_to = "risk_type", values_to = "total_ANP") %>%
  arrange(total_ANP)

# Graficar los datos acumulados
hchart <- hchart(annual_report_data, "column", hcaes(x = reorder(risk_type, total_ANP), y = total_ANP)) %>%
  hc_title(text = "Número Acumulado de ANP que Reportan 'Todo el Año' por Riesgo") %>%
  hc_xAxis(title = list(text = "Tipo de Riesgo")) %>%
  hc_yAxis(title = list(text = "Número de ANP Reportando 'Todo el Año'")) %>%
  hc_plotOptions(column = list(dataLabels = list(enabled = TRUE))) %>%
  hc_tooltip(pointFormat = "Riesgo: {point.x}<br>ANP Reportando: {point.y}")
```

```{r}
months_ordered <- c("Ene", "Feb", "Mar", "Abr", "Mayo", "Jun", 
                    "Jul", "Ago", "Sept", "Oct", "Nov", "Dic")

expanded_risk_data <- risk_data %>%
  mutate(across(-c(id_anp, nombre_anp), ~ ifelse(. == "Todo el año", paste(months_ordered, collapse = ", "), .)))

months_count_data <- risk_data %>%
  mutate(across(-c(id_anp, nombre_anp), ~ ifelse(. == "Todo el año", NA, .))) %>%
  pivot_longer(-c(id_anp, nombre_anp), names_to = "risk_type", values_to = "months_reported") %>%
  separate_rows(months_reported, sep = ", ") %>%
  filter(!is.na(months_reported)) %>%
  distinct(id_anp, months_reported, .keep_all = TRUE) %>%
  group_by(months_reported) %>%
  summarise(total_ANP = n()) %>%
  mutate(months_reported = factor(months_reported, levels = months_ordered)) %>%
  arrange(months_reported)

hchart <- hchart(months_count_data, "column", hcaes(x = months_reported, y = total_ANP)) %>%
  hc_title(text = "Total de ANP por Mes (sin duplicados)") %>%
  hc_xAxis(title = list(text = "Mes")) %>%
  hc_yAxis(title = list(text = "Número de ANP")) %>%
    hc_plotOptions(column = list(dataLabels = list(enabled = TRUE))) %>%
  hc_tooltip(pointFormat = "Mes: {point.x}<br>Total ANP: {point.y}")

```

# data wrangling

```{r}
#reduce in one anp, CADNR 043 and Islas del Golfo

risk_data_reduced <- risk_data %>%
  mutate(id_anp_base = str_remove(id_anp, "[A-Z]$"))

risk_data_combined <- risk_data_reduced %>%
  group_by(id_anp_base) %>%
  summarise(across(
    -c(id_anp, nombre_anp),  
    ~ if (any(. == "Todo el año", na.rm = TRUE)) {
      "Todo el año"    
    } else {
      paste(unique(na.omit(str_split(., ",\\s*") %>% unlist())), collapse = ", ")
    }
  ), .groups = "drop") %>%
  rename(id_anp = id_anp_base)   

 
risk_data_combined <- risk_data_combined %>%
  left_join(anp_df %>% select(ID_ANP, NOMBRE_ANP, CAT_MANEJO, REGION), 
            by = c("id_anp" = "ID_ANP"))%>%
 # mutate(num_anp = row_number()) %>%   
  select(id_anp, NOMBRE_ANP, CAT_MANEJO, REGION, everything()) %>%   
  rename(nombre_anp = NOMBRE_ANP, cat_manejo = CAT_MANEJO, region = REGION)   

risk_data_combined <- risk_data_combined %>%
  mutate(cat_manejo = recode(cat_manejo,
                             "Reserva de la Biosfera" = "RB",
                             "Parque Nacional" = "PN",
                             "Área de Protección de Flora y Fauna" = "APFF",
                             "Santuario" = "SANT",
                             "Área de Protección de los Recursos Naturales" = "APRN",
                             "Monumento Natural" = "MN"))#getwd()
#writexl::write_xlsx(risk_data_combined,"data/clean_data/datos_meses.xlsx")
```

```{r echo=FALSE}
risk_data1 <- risk_data_combined %>%
  mutate(across(
    -c(id_anp, nombre_anp, cat_manejo, region),
    ~ ifelse(!is.na(na_if(., "")), 1, 0)
  ))

risk_data1 <- risk_data1 %>%
  mutate(total_rfp_anp = rowSums(select(., -c(id_anp, nombre_anp, cat_manejo, region)), na.rm = FALSE))



# 1 a 12 de los num de meses que reportan
count_months <- function(x) {
  if (is.na(x)) {
    return(0)
  } else if (x == "Todo el año") {
    return(12)
  } else {
    return(length(unlist(strsplit(x, ",\\s*"))))
  }
}

risk_data2 <- risk_data %>%
  mutate(across(-c(id_anp, nombre_anp), ~ sapply(., count_months)))
```

```{r echo=FALSE}
# writexl::write_xlsx(risk_data, "data/clean_data/matrizF_rfpANP_red.xlsx")
# writexl::write_xlsx(risk_data2, "data/clean_data/matrizrfpanp_codnummeses_red.xlsx")

risk_data1 <- risk_data1[, c("id_anp","nombre_anp","cat_manejo", "region",
                             "Sismos", "Deslaves","Erosion", "Vulcanismo", "Hundimientos",
                             "Huracanes", "Altas_temperaturas", "Ciclones_tropicales", "Incendios_forestales", "Inundaciones", "Nevadas", "Sequias", "Tormentas_tropicales",
                             "Blanqueamiento_corales", "Especies_exoticas-invasoras", "Plagas_forestales", "Zoonosis_enfermedades_emergente",
                             "Derrame_hidrocarburos", "Contaminacion_solidos-liquidos", "Contaminacion_cuerpos_de_agua", "Residuos_peligrosos", "Uso_plaguicidas_agroquimicos", "Vertederos_al_aire_libre",
                             "Ganaderia_dentro_ANP", "Mineria","Problematica_tenencia_tierra", "Extraccion_material_petreo",
                             "Construccion_infraestructura",
                             "Tala_ilegal", "Asent._irregulares_invasiones", "Cambio_uso_de_suelo", "Extraccion-trafico_flora_fauna", "Caza_ilegal", "Pesca_ilegal",  
                             "Turismo_irregular_malas_practic",
                             "Inseguridad_delincuencia"
                             )]

geologicos <- c("Sismos", "Deslaves", "Erosion", "Hundimientos", "Vulcanismo")
hidro <- c("Huracanes", "Altas_temperaturas", "Ciclones_tropicales", 
           "Incendios_forestales", "Nevadas", "Sequias", "Tormentas_tropicales")
risk_data1$tot_risk_geologicos <- rowSums(risk_data1[, geologicos], na.rm = TRUE)
risk_data1$tot_risk_hidro <- rowSums(risk_data1[, hidro], na.rm = TRUE)




#writexl::write_xlsx(risk_data1, "data/clean_data/matrizf_rfpanp_cod01.xlsx")



```

# Análisis de Riesgos Geológicos

-   Sismos
-   Deslaves
-   Erosión
-   Hundimientos
-   Vulcanismo

```{r echo=FALSE}
library(dplyr)

df_riesgos_geologicos_mes <- risk_data_combined %>%
  select(id_anp, nombre_anp, cat_manejo, region, Sismos, Deslaves, Erosion, Hundimientos, Vulcanismo) 


df_riesgos_geologicos_01 = df_riesgos_geologicos_mes %>%
  mutate(across(
    -c(id_anp, nombre_anp, cat_manejo, region),
    ~ ifelse(!is.na(na_if(., "")), 1, 0)
    ))
colnames(df_riesgos_geologicos_01) = c("id_anp","nombre_anp","cat_manejo",
                                       "region","Sismos","Remoción en masa","Erosión",
                                       "Subsidencia","Vulcanismo")
colnames(df_riesgos_geologicos_mes) = c("id_anp","nombre_anp","cat_manejo",
                                       "region","Sismos","Remoción en masa","Erosión",
                                       "Subsidencia","Vulcanismo")

col_rg = "#c6825b"

cols_levels_rg = c("#7c896f","#deb9a9", "#d49d7f", "#895D2B", "#cc8245","#a45024") # 0 a 5
color_degr = rev(c("#8b5a3e" , "#d2a679", "#d8b89a", "#e1c1b8", "#e7d3c6"))
 

```



```{r}
df_riesgos_geologicos_01_tot <- df_riesgos_geologicos_01 %>%
  mutate(total_rg = rowSums(select(., -c(id_anp, nombre_anp, cat_manejo, region)), na.rm = FALSE))

risk_count_rg <- df_riesgos_geologicos_01_tot %>%
  count(total_rg) %>%
  filter(total_rg <= 5) 


#head(risk_count_rg)

highchart() %>%
  hc_chart(type = "column") %>%
  hc_title(text = "Número de Riesgos geológicos por ANP (ok)") %>%
  hc_add_series(
    name = "ANP",
    data = risk_count_rg$n,
   #colorByPoint = TRUE,
    color = col_rg,
    dataLabels = list(enabled = TRUE,
                      style = list(
                        color = 'black',
                        fontSize = '13px'
                        )
                      )
  ) %>%
   hc_tooltip(pointFormat = "<b>{point.y} ANP</b> con <b>{point.category} riesgos</b>")%>%
  hc_xAxis_multiples(
      list(
      title = list(text = "Número de riesgos",
                   style = list(color = 'black', 
                                fontSize = '16px')),
      labels = list(style = list(fontWeight = "bold",
                                 color = 'black', 
                                 fontSize = '13px'))
    )
    
    
  ) %>%
  hc_yAxis_multiples(
      list(
      title = list(text = "Número de ANP",
                   style = list(color = 'black', 
                                fontSize = '16px')),
      labels = list(style = list(fontWeight = "bold",
                                 color = 'black', 
                                 fontSize = '13px'))
    )
  )

```
 



```{r echo=FALSE}
rg_summ <- df_riesgos_geologicos_01 %>%
  summarise(across(Sismos:Vulcanismo, sum)) %>%
  pivot_longer(everything(), names_to = "variable", values_to = "total") %>%
  mutate(color = c(rep(col_rg,5))[1:n()]) %>%
  arrange(total)  # menor a mayor
```


```{r echo=FALSE}
hchart(
  rg_summ, 
  "pie", 
  hcaes(x = variable, y = total)
) %>%
  hc_title(
    text = "Número de ANP en las que ocurre todo el año el riesgo",
    style = list(fontSize = "20px", fontWeight = "bold", color = "black")   
  ) %>%
  hc_tooltip(
    pointFormat = "Riesgo: {point.name}<br>ANP Reportando: {point.y}"
  ) %>%
  hc_plotOptions(
    pie = list(
      dataLabels = list(
        enabled = TRUE, 
        format = '{point.name}: {point.y} ANP',
        style = list(fontSize = "14px", fontWeight = "bold", color = "black")   
      ),
      colors = color_degr, 
      innerSize = "50%"
    )
  ) %>%
  hc_xAxis(
    labels = list(style = list(fontWeight = "bold", color = "black"))   
  ) %>%
  hc_yAxis(
    labels = list(style = list(fontWeight = "bold", color = "black"))  
  )

```

```{r echo=FALSE}
# hchart(rg_summ, "column", hcaes(x = variable, y = total, color = color)) %>%
#   hc_title(text = "Número de ANP que reportaron un tipo de Riesgo geológico") %>%
#   hc_xAxis(title = list(text = "Riesgos geológicos", style = list(fontSize = "16px",
#                                                                   color = "black")),
#            labels = list(style = list(fontSize = "14px",
#                                       color = "black"))) %>%
#   hc_yAxis(title = list(text = "Número de ANP", style = list(fontSize = "16px",
#                                                              color = "black"
#                                                              )),
#            labels = list(style = list(fontSize = "14px",
#                                       color = "black"))) %>%
#   hc_plotOptions(column = list(
#     dataLabels = list(enabled = TRUE, style = list(fontSize = "16px"))   
#   )) %>%
#   hc_tooltip(pointFormat = "Riesgo: {point.variable}<br>Número de ANP con el riesgo: {point.y}")
```

```{r echo=FALSE}


#  hchart(
#   rg_summ, 
#   "pie", 
#   hcaes(x = variable, y = total)
# ) %>%
#   hc_title(
#     text = "Número de ANP en las que ocurre todo el año el riesgo",
#     style = list(fontSize = "20px")  # Cambiar el tamaño del título
#   ) %>%
#   hc_tooltip(
#     pointFormat = "Riesgo: {point.name}<br>ANP Reportando: {point.y}"
#   ) %>%
#   hc_plotOptions(
#     pie = list(
#       dataLabels = list(
#         enabled = TRUE, 
#         format = '{point.name}: {point.y} ANP',
#         style = list(fontSize = "14px")  # Cambiar el tamaño de las etiquetas
#       ),
#       colors = color_degr, 
#       innerSize = "50%"
#     )
#   )


```

## meses en qué más se reporta el grupo de riesgos

```{r include=FALSE,fig.dim=c(6,5.5)}
months <- c("Ene", "Feb", "Mar", "Abr", "Mayo", "Jun", 
                    "Jul", "Ago", "Sept", "Oct", "Nov", "Dic")

 
expanded_rg_data <- df_riesgos_geologicos_mes %>%
  mutate(across(-c(id_anp, nombre_anp, cat_manejo, region),
                ~ ifelse(. == "Todo el año", paste(months, collapse = ", "), 
                         .)
                ))

months_rg <- df_riesgos_geologicos_mes %>%
  mutate(across(-c(id_anp, nombre_anp, cat_manejo, region), ~ ifelse(. == "Todo el año", NA, .))) %>%
  pivot_longer(-c(id_anp, nombre_anp, cat_manejo, region), names_to = "risk_type", values_to = "months_reported") %>%
  separate_rows(months_reported, sep = ", ") %>%
  filter(!is.na(months_reported)) %>%
  distinct(id_anp, months_reported, .keep_all = TRUE) %>%
  group_by(months_reported) %>%
  summarise(total_ANP = n()) %>%
  mutate(months_reported = factor(months_reported, levels = months_ordered)) %>%
  arrange(months_reported)

# hchart(
#   months_rg[c(1:12),], 
#   "line",
#   hcaes(x = months_reported, y = total_ANP, color = col_rg)
# ) %>%
#   hc_title(
#     text = "Meses en los que más se reportan los riesgos geológicos",
#     style = list(color = "black", fontSize = "18px", fontWeight = "bold")
#   ) %>%
#   hc_tooltip(
#     pointFormat = "Mes: {point.x}<br>Total ANP: {point.y}"
#   ) %>%
#   hc_xAxis(
#     title = list(
#       text = "Mes",
#       style = list(color = "black", fontSize = "16px", fontWeight = "bold")
#     ),
#     labels = list(
#       style = list(color = "black", fontSize = "13px", fontWeight = "bold")
#     ),
#     categories = months_rg$months_reported 
#   ) %>%
#   hc_yAxis(
#     title = list(
#       text = "Número de ANP",
#       style = list(color = "black", fontSize = "16px", fontWeight = "bold")
#     ),
#     labels = list(
#       style = list(color = "black", fontSize = "13px", fontWeight = "bold")
#     )
#   ) %>%
#   hc_plotOptions(
#     column = list(
#       dataLabels = list(
#         enabled = TRUE,
#         format = "{point.y}",
#         style = list(color = "black", fontSize = "14px", fontWeight = "bold")
#       )
#     )
#   )

 


```

TODO EL AÑO
```{r}

annual_rg <- df_riesgos_geologicos_mes %>%
  select(-c(id_anp, nombre_anp, cat_manejo, region)) %>%
  summarise(across(everything(), ~ sum(. == "Todo el año", na.rm = TRUE)))


annual_rg <- annual_rg %>%
  pivot_longer(everything(), names_to = "risk_type", values_to = "total_ANP") %>%
  arrange(total_ANP)

 

# hchart(
#   annual_rg, 
#   "pie", 
#   hcaes(x = reorder(risk_type, total_ANP), y = total_ANP)
# ) %>%
#   hc_title(text = "Número de ANP en las que ocurre todo el año el riesgo") %>%
#   hc_tooltip(pointFormat = "Riesgo: {point.name}<br>ANP Reportando: {point.y}") %>%
#   hc_plotOptions(
#     pie = list(
#       dataLabels = list(enabled = TRUE, format = '{point.name}: {point.y}'),
#       colors = color_degr,  # Aplicar el vector de colores
#       innerSize = "50%"
#     )
#   )

```

Gráfico 3. Número de ANP y ocurrencia durante todo el año

El Gráfico 3 ilustra los riesgos geológicos reportados por las ANP a lo largo del año, de las 110 ANP que identificaron la erosión como un riesgo, más del 60 % (68 ANP) consideran que este problema es persistente durante todo el año. En el caso de los sismos, de las 37 ANP que los reportan, 30 indican que este riesgo también prevalece continuamente, de manera similar, los hundimientos son considerados un riesgo constante en 9 ANP, por otro lado, el vulcanismo en 6 ANP y los deslaves en solo 2 ANP, a pesar de que 45 ANP los identifican estos últimos como un riesgo.




## Análisis regional

```{r}

# summary_by_region <- risk_data1 %>%
#   group_by(region,  tot_risk_geologicos) %>%  
#   summarise(count = n(), .groups = "drop")# %>%  
#   #arrange(region, cat_manejo, tot_risk_geologicos)   
# 
#  
# view(summary_by_region)

```


### Población afectada en las ANP

 

```{r include=FALSE, echo=FALSE}
# add poblation to riskdata1

# df_pobANP= read_excel("data/raw_data/poblacionANP.xlsx")
# 
# 
# pob_anp <- df_pobANP %>% rename(nombre_anp = anp)
# 
# result_df <- full_join(pob_anp, risk_data1, by = "nombre_anp") 
# 
# result_df <- result_df %>%
#    mutate(id_cat_manejo = recode(id_cat_manejo,
#                               "10" = 1,
#                               "1" = 3,
#                               "2" = 7,
#                               "3" = 8,
#                               "4" = 6,
#                               "5" = 4))

#writexl::write_xlsx(result_df, "data/clean_data/rfp_pobANP.xlsx")


```


```{r include=FALSE, echo=FALSE}
# library(dplyr)
# library(fuzzyjoin)
# 
# 
# result_df1 <- stringdist_join(
#   pob_anp, risk_data1, 
#   by = c("nombre_anp" = "nombre_anp"),  # Indicar las columnas clave
#   method = "jw",            # Método de comparación (Jaro-Winkler es adecuado para texto)
#   max_dist = 0.2,           # Nivel de tolerancia (ajustar según tus datos)
#   distance_col = "distancia" # Agregar una columna con la distancia calculada
# )
# 
# result_df <- result_df1 %>%
#    mutate(id_cat_manejo = recode(id_cat_manejo,
#                               "10" = 1,
#                               "1" = 3,
#                               "2" = 7,
#                               "3" = 8,
#                               "4" = 6,
#                               "5" = 4))
 

#writexl::write_xlsx(result_df, "data/clean_data/pob_rfpANP.xlsx")

```


## Tabla por regionales

# Riesgos hidrometeorológicos

```{r}
cols_hm = c("#f0f8ff","#d0e5f7","#a1c3f1","#6493e1","#3c66d1","#1a48b6","#13368a","#0d2661","#09173e")
```


```{r}
df_riesgos_hidrometeorologicos_mes <- risk_data_combined %>%
  select(id_anp, nombre_anp, cat_manejo, region, Huracanes, Altas_temperaturas, 
         Ciclones_tropicales, Incendios_forestales, Nevadas, Sequias,
         Tormentas_tropicales ) 


df_riesgos_hidrometeorologicos_01 = df_riesgos_hidrometeorologicos_mes %>%
  mutate(across(
    -c(id_anp, nombre_anp, cat_manejo, region),
    ~ ifelse(!is.na(na_if(., "")), 1, 0)
  ))
```

```{r}
rh_summ <- df_riesgos_hm_summ <- df_riesgos_hidrometeorologicos_01 %>%
  summarise(across(Huracanes:Tormentas_tropicales, sum)) %>%
  pivot_longer(everything(), names_to = "variable", values_to = "total") %>%
  mutate(color = c(rep(col_rg,5))[1:n()]) %>%
  arrange(total)  # menor a mayor


 
 
  
```


